@using News.App.Services;
@inject IApp app

@{
    var rv = ViewContext.RouteData.Values;
    var indexPage = rv["page"] is "/Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - News</title>
    <link rel="stylesheet" href="~/css/theme.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/News.App.styles.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
    <partial name="_Favicons" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index" asp-route-channel="">
                    <img alt="Brand" src="~/android-chrome-256x256.png" width="24" height="24">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index" asp-route-channel="">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Daily" asp-route-channel="">Daily</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#" id="import-menu" data-bs-toggle="dropdown">Import</a>
                            <ul class="dropdown-menu" aria-labelledby="import-menu">
                                <li><a class="dropdown-item" asp-area="" asp-page="/ImportUrl">URL</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-page="/ImportOpml">OPML</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" asp-area="" asp-page="/Export">Export</a></li>
                            </ul>
                        </li>
                    </ul>
                    @if (indexPage)
                    {
                        <form class="d-flex" method="get">
                            <div class="input-group input-group-sm">
                                <input name="q" class="form-control" type="search" placeholder="Search" aria-label="Search"
                                value="@Context.Request.Query["q"].ToString()">
                                <button class="btn btn-outline-secondary" type="submit">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </form>
                    }
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - @app.Product @app.Version - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>